#include <stdio.h>
#include <stdlib.h>
#include <sys/socket.h>
#include <pthread.h>
#include <string.h>
#include <netinet/in.h>
#include <errno.h>

#define BUFFSIZE 256

void threadRcv(int sock){
while(1){
 struct sockaddr_in ad;
 char buffRcv[BUFFSIZE];
 if(recvfrom(sock, buffRcv, BUFFSIZE, 0,(struct sockaddr*)&ad,sizeof(ad))<0){
	printf("rc\n");
	}
 printf(" %s\n",buffRcv);
 }
}

int setNick(char *nick){
 char tmp[10];
 bzero(tmp,10);
 printf("nick");
 nick=malloc(10);
 scanf("nick: %s",nick);
 return 10;
}


int main(int argc,char **argv){
 int sock,nickLen;
 char buffSnd[BUFFSIZE],*nick;
 struct sockaddr_in saddr,addr;
 struct ip_mreqn mreq;
 pthread_t thread;

 sock=socket(AF_INET,SOCK_DGRAM,0);
 if(sock<0){ printf("sock\n");}
 bzero(&addr,sizeof(struct sockaddr_in));
 bzero(&saddr,sizeof(struct sockaddr_in));
 addr.sin_family=AF_INET;
 addr.sin_port=htonl(12345);
 addr.sin_addr.s_addr = htonl(INADDR_ANY); 
 bind(sock, (struct sockaddr *)&addr, sizeof(struct sockaddr_in));
 mreq.imr_multiaddr.s_addr=inet_addr("224.0.0.3");
 mreq.imr_address.s_addr=inet_addr("192.168.0.11");

 saddr.sin_family=AF_INET;
 saddr.sin_port=htonl(12346);
 saddr.sin_addr.s_addr = inet_addr("224.0.0.3");

 mreq.imr_ifindex=3;
 int i=setsockopt(sock,IPPROTO_IP,IP_ADD_MEMBERSHIP,&mreq,sizeof(mreq));
	printf("opt %d \n",errno);
	printf("opt %s \n",strerror(errno));

 nickLen=setNick(nick);
 int k=sizeof(addr);
 pthread_create(&thread,NULL,threadRcv,(void *)sock);
 while(1){
	bzero(buffSnd,BUFFSIZE);
	scanf("%s",buffSnd);
	printf("%s\n",buffSnd);
	if(sendto(sock,buffSnd,sizeof(buffSnd),0,(struct sockaddr*)&addr,k)<0){
	printf("send\n");
	printf("opt %d \n",errno);
	printf("opt %s \n",strerror(errno));
	}
 }

 free(nick);
return 0;
}
